#!groovyâ€‹
pipeline {
	agent {
		dockerfile {
        filename './jenkins_web_config/Dockerfile.web'
				args '-u root:root'
        registryUrl 'https://artifactory.acme.com'
        registryCredentialsId 'automation_artifactory'
    }
	}
	environment{
		CLIENT_ID           ="Company-KEY"
		CLIENT_SCOPES       ="<scopes>"
		DEFAULT_COMPANY     ="API Automation Integration"
		DEFAULT_COMPANY_ID  = "<id>"
		SFTP_KEY            = credentials('AUTOMATION-QE-SFTP_KEY')
		USERNAME            ="automation@acme.com"
		USERPASS            = credentials('AUTOMATION-QE-API-USERPASS')
		CLIENT_SECRET       = credentials('AUTOMATION-QE-CLIENT_SECRET')
		LOGIN_SERVICE_HOST  = "https://srv-qe.acme.com"
		ROOT_URL            = "https://qe.acme.io"
		TARGET_ENV			= "QE"
		AUTOMATION_RUNNER	    = "jenkins_web_config/jenkins-web-runner.sh true"
		AUTOMATION_CLEAN	    = "jenkins_web_config/jenkins-web-runner.sh -t @jenkins --feature cleanup || true"
	}

  stages{
		stage('Execute Regression Tests in QE'){
			steps{
				sh 'id'
				sh 'printenv'
				sh '$WORKDIR/$AUTOMATION_RUNNER'
				sh '$WORKDIR/$AUTOMATION_CLEAN'
			}
		}

		stage('Generate Reports'){
			steps{
				sh 'cp $WORKDIR/results/*.xml "$WORKSPACE"'
				junit '*.xml'
			}
		}
	}

	post {
		success {
      mail to: 'devteam@acme.com',
          subject: "SUCCESS: ${currentBuild.fullDisplayName}",
          body: "The API Regression Test Completed Successfully for ${TARGET_ENV}"
    }
		failure {
      mail to: 'devteam@acme.com',
          subject: "FAILED: ${currentBuild.fullDisplayName}",
          body: "Something FAILED with the API Regression Tests in ${TARGET_ENV}\n\n${env.BUILD_URL}"
    }
  }
}
